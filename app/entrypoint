#!/usr/bin/env python

"""
Entrypoint for the kiwitcms/gitops application!
This is meant to be executed as a command line application triggered
via a pull request comment!
"""
#
# Copyright (c) 2024 Alexander Todorov <atodorov@otb.bg>
#
# Licensed under the AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.html
#
import os
import sys

root_path = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
sys.path.append(root_path)

import click
import sentry_sdk

from app.analytics import analyze
from app import events
from app.utils import strtobool
from app.version import __version__


@analyze("main")
def main():
    trigger_event = events.load()

    if strtobool(os.environ.get("INPUT_DEBUG", "false")):
        import pprint

        click.echo("==== ENVIRONMENT ====")
        click.echo(pprint.pformat(dict(os.environ)))

        click.echo("===== TRIGGER EVENT ====")
        click.echo(pprint.pformat(trigger_event.payload))
        click.echo("===================")

        click.echo("===== ARGUMENTS ====")
        click.echo(trigger_event.args)
        click.echo("=================")

    # /use/bin/gh repo clone trigger_event["repository"]["clone_url"] .
    # trigger_event.payload["issue"]["number"]
    # /usr/bin/gh pr checkout https://github.com/kiwitcms/gitops/pull/16

    if not trigger_event.args[0].startswith("@kiwitcms"):
        return

    cli(trigger_event.args[1:], prog_name="kiwitcms/gitops")


@click.group(
    invoke_without_command=True,
    context_settings={"ignore_unknown_options": True, "allow_extra_args": True},
)
@click.pass_context
def cli(ctx):
    click.echo("DEBUG: from the cli() function")
    click.echo(f"Extra args: {ctx.args}")


@cli.command()
@analyze("help")
def help():
    click.echo(cli.get_help(click.get_current_context()))


if __name__ == "__main__":
    sentry_sdk.init(
        dsn="https://e9a370eba7bd41fe8faead29552f12d7@o126041.ingest.sentry.io/277775",
        enable_tracing=False,
        release=__version__,
    )
    main()
